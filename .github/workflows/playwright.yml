name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - 'web/**'
      - '.github/workflows/playwright.yml'

permissions:
  pull-requests: write
  issues: write

jobs:
  test:
    name: Playwright E2E Tests
    runs-on: blacksmith-16vcpu-ubuntu-2204-arm
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpam0g-dev xvfb
          
      - name: Install dependencies
        working-directory: ./web
        run: pnpm install
        
      - name: Build application
        working-directory: ./web
        run: pnpm run build
        
      - name: Install Playwright browsers
        working-directory: ./web
        run: pnpm exec playwright install --with-deps chromium
        
      - name: Start test server
        working-directory: ./web
        run: |
          # Start the server in the background with test port
          PORT=4022 pnpm run dev:server &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          
          # Wait for server to be ready
          echo "Waiting for server to start on port 4022..."
          for i in {1..30}; do
            if curl -s http://localhost:4022/api/health > /dev/null 2>&1; then
              echo "Server is ready!"
              break
            fi
            echo "Waiting for server... attempt $i/30"
            sleep 1
          done
          
          # Verify server is running
          if ! curl -s http://localhost:4022/api/health > /dev/null 2>&1; then
            echo "Server failed to start!"
            exit 1
          fi
        
      - name: Run Playwright tests
        working-directory: ./web
        run: xvfb-run -a pnpm test:e2e
        env:
          CI: true
          
      - name: Stop test server
        if: always()
        working-directory: ./web
        run: |
          if [ ! -z "$SERVER_PID" ]; then
            kill $SERVER_PID || true
          fi
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: web/playwright-report/
          retention-days: 7
          
      - name: Upload test videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-videos
          path: web/test-results/
          retention-days: 7