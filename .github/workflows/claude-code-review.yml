name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Find existing Claude review comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- claude-code-review -->'

      - name: Create or update comment with review in progress
        uses: peter-evans/create-or-update-comment@v4
        id: comment
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## ü§ñ Claude Code Review
            <!-- claude-code-review -->
            
            üîÑ **Review in progress...** Claude is analyzing your pull request.
            
            <details>
            <summary>Review Details</summary>
            
            - **Triggered by**: ${{ github.event_name }} event
            - **Commit**: ${{ github.event.pull_request.head.sha }}
            - **Started at**: ${{ github.event.pull_request.updated_at }}
            
            </details>
          edit-mode: replace

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage
            
            Be constructive and helpful in your feedback.
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Optional: Add specific tools for running tests or linting
          allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test),Bash(npm run test:*),Bash(npm run lint),Bash(npm run lint:*),Bash(npm run typecheck),Bash(npm run format)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

      - name: Extract Claude's review from PR comments
        if: always()
        id: extract-review
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Get all comments on the PR
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              per_page: 100
            });
            
            // Find the most recent comment by claude[bot]
            const claudeComment = comments.data
              .filter(comment => comment.user.login === 'claude[bot]')
              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))[0];
            
            if (claudeComment) {
              // Extract the review content
              const reviewContent = claudeComment.body;
              core.setOutput('review_found', 'true');
              core.setOutput('review_content', reviewContent);
              
              // Delete Claude's original comment to avoid duplication
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: claudeComment.id
              });
            } else {
              core.setOutput('review_found', 'false');
              core.setOutput('review_content', 'No review was generated.');
            }

      - name: Update comment with Claude's review
        if: always()
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## ü§ñ Claude Code Review
            <!-- claude-code-review -->
            
            ${{ steps.extract-review.outputs.review_found == 'true' && steps.extract-review.outputs.review_content || '‚ùå **Review failed** - Claude was unable to complete the review.' }}
            
            ---
            <sub>Review completed for commit ${{ github.event.pull_request.head.sha }}</sub>
          edit-mode: replace